{"ast":null,"code":"var _jsxFileName = \"/var/www/langchain/src/Page/Chat/Index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport \"./chat.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [messages, setMessage] = useState([]);\n  const handleSendMessage = () => {\n    // if (message) {\n    //   messages.push({ sender: \"Eu\", content: message });\n    //   setMessage(\"\");\n    // }\n    setMessage({\n      sender: \"Eu\",\n      content: \"Teste\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h5\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"chat-messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSendMessage,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"B7yby6bw1Ogj5Cvvy/1q9Yqnh8w=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","Button","Card","Form","jsxDEV","_jsxDEV","Chat","_s","messages","setMessage","handleSendMessage","sender","content","className","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","Group","controlId","Control","rows","variant","onClick","_c","$RefreshReg$"],"sources":["/var/www/langchain/src/Page/Chat/Index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport \"./chat.scss\";\n\nexport default function Chat() {\n  const [messages, setMessage] = useState<any>([]);\n\n  const handleSendMessage = () => {\n    // if (message) {\n    //   messages.push({ sender: \"Eu\", content: message });\n    //   setMessage(\"\");\n    // }\n    setMessage({ sender: \"Eu\", content: \"Teste\" });\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <Card>\n        <Card.Header as=\"h5\">Chat</Card.Header>\n        <Card.Body className=\"chat-messages\">\n          {/* {messages.map((message: any) => (\n            <p>\n              {message.sender}: {message.content}\n            </p>\n          ))} */}\n        </Card.Body>\n        <Card.Footer className=\"chat-footer\">\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Control as=\"textarea\" rows={2} />\n          </Form.Group>\n\n          <Button variant=\"primary\" onClick={handleSendMessage}>\n            Enviar\n          </Button>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,iBAAiB;AACpD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAM,EAAE,CAAC;EAEhD,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA;IACA;IACA;IACAD,UAAU,CAAC;MAAEE,MAAM,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAQ,CAAC,CAAC;EAChD,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BT,OAAA,CAACH,IAAI;MAAAY,QAAA,gBACHT,OAAA,CAACH,IAAI,CAACa,MAAM;QAACC,EAAE,EAAC,IAAI;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACvCf,OAAA,CAACH,IAAI,CAACmB,IAAI;QAACR,SAAS,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMzB,CAAC,eACZf,OAAA,CAACH,IAAI,CAACoB,MAAM;QAACT,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAClCT,OAAA,CAACF,IAAI,CAACoB,KAAK;UAACV,SAAS,EAAC,MAAM;UAACW,SAAS,EAAC,8BAA8B;UAAAV,QAAA,eACnET,OAAA,CAACF,IAAI,CAACsB,OAAO;YAACT,EAAE,EAAC,UAAU;YAACU,IAAI,EAAE;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eAEbf,OAAA,CAACJ,MAAM;UAAC0B,OAAO,EAAC,SAAS;UAACC,OAAO,EAAElB,iBAAkB;UAAAI,QAAA,EAAC;QAEtD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACb,EAAA,CAlCuBD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}